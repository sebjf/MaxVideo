package types;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEStruct;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEStructType;

public class uRGBA {

	private static final DFEType type = Kernel.dfeUInt(8);

	public final DFEVar m_R;
	public final DFEVar m_G;
	public final DFEVar m_B;
	public final DFEVar m_A;

	public uRGBA(int r, int g, int b, int a, Kernel k)
	{
		m_R = k.constant.var(type, r);
		m_G = k.constant.var(type, g);
		m_B = k.constant.var(type, b);
		m_A = k.constant.var(type, a);
	}

	public uRGBA(DFEVar r, DFEVar g, DFEVar b, DFEVar a)
	{
		m_R = r.cast(type);
		m_G = g.cast(type);
		m_B = b.cast(type);
		m_A = a.cast(type);
	}

	public static DFEStructType getDFEStructType()
	{
		return new DFEStructType(
				  DFEStructType.sft("R", type),
				  DFEStructType.sft("G", type),
				  DFEStructType.sft("B", type),
				  DFEStructType.sft("A", type));
	}

	public DFEStruct getDFEStruct()
	{
		DFEStruct s = (getDFEStructType()).newInstance(m_R.getKernel());
		s["R"] = m_R;
		s["G"] = m_G;
		s["B"] = m_B;
		s["A"] = m_A;
		return s;
	}

	public static uRGBA Transparent(Kernel kernel)
	{
		return new uRGBA(0,0,0,0,kernel);
	}
}
